% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synth_bch.R
\name{synth_bch}
\alias{synth_bch}
\title{Synthetic outcome tests}
\usage{
synth_bch(
  fm,
  df,
  splines,
  pc_num,
  nSim = 1000,
  weights = FALSE,
  max_clus = 6,
  Parallel = FALSE,
  exact_cholesky = TRUE,
  k_medoids = TRUE,
  jitter_coords = TRUE
)
}
\arguments{
\item{fm}{The equation formula. The variable of interest is the first one on
the right hand side.}

\item{df}{The name of the dataset use. Longitude and latitude must be named
X and Y and have no missing values.}

\item{splines}{The dimension of the linear tensor used, from optimal_basis
function}

\item{pc_num}{The number of principal component to include, again from
optimal_basis}

\item{nSim}{The number of placebos to generate. Defaults to 1000 but lower
values should be used first to get an idea of how the regression is
behaving.}

\item{weights}{Set weights=T if the regression is weighted. The weighting
variable in the dataset must be named weights.}

\item{max_clus}{The maximum number of large cluster standard errors to
examine with the placebo test. Defaults to 6.}

\item{Parallel}{Run the simulations in parallel.}

\item{exact_cholesky}{For very large datasets, setting this to F will use the
BRISC Cholesky approximation.}

\item{k_medoids}{For large datasets, set to F to use Clara to generate
medoids.}

\item{jitter_coords}{If some sites have identical coordinates, jitter by
adding Gaussian noise with standard deviation of 0.01 (10 km) to allow
Moran test to be calculated.}
}
\value{
A list containing Results which summarizes the placebo values and
Spatial_Params giving the Moran test value and the range and structure used
to generate the placebos.
}
\description{
Run synthetic outcome tests on regressions to test the null hypothesis that
the dependent variable is generated by a quadratic in longitude and latitude
plus noise and is therefore independent of the explanatory variable.
}
\examples{
library(spatInfer)
data(opportunity)
# Use 250 observations and 100 simulations to speed things up.
set.seed(123)
opportunity=opportunity |> dplyr::slice_sample(n=100)
# Use the number of splines and PCs indicated by optimal_basis()
syn_bch=synth_bch(mobility~racial_seg+single_mom,  opportunity,
splines=4, pc_num=3,nSim=100,Parallel=FALSE)

synth_table(syn_bch,adjust="BCH")
}
